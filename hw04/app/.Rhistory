return (0)
}
}
score_lab(12)
score_lab(14)
score_lab(9)
drop_lowest <- function(x) {
x <- x[-which.min(x)]
return (x)
}
drop_lowest(scores)
score_homework <- function(x, drop=FALSE) {
if (drop == TRUE) {
x <- drop_lowest(x)
}
return (get_average(x))
}
$ $ f
score_homework(scores, drop=TRUE)
mean(drop_lowest(scores))
score_homework(scores)
quizzes <- c(100, 80, 70, 0)
score_quiz(quizzes, drop = TRUE)
score_quiz <- function(x, drop=FALSE) {
if (drop == TRUE) {
x <- drop_lowest(x)
}
return (get_average(x))
}
score_quiz <- function(x, drop=FALSE) {
if (drop == TRUE) {
x <- drop_lowest(x)
}
return (get_average(x))
}
score_quiz(quizzes, drop = TRUE)
score_quiz(quizzes, drop = FALSE)
get_quartile3(a)
quartile(a, 0.75)
q <- get_quartile(a)
q <- get_quartile3(a)
q
q[2]
q[1]
q[1][2]
q[1][1]
q[,2]
q[1,2]
q[,1]
summary_stats <- function(x) {
minimum <- get_minimum(x)
percent10 <- get_percentile10(x)
quartile1 <- get_quartile1(x)
median <- get_median(x)
mean <- get_average(x)
quartile3 <- get_quartile3(x)
maximum <- get_maximum(x)
range <- get_range(x)
stdev <- get_stdev(x)
missing <- count_missing(x)
return (list(minimum, percent10, quartile1, median, mean,
quartile3, maximum, range, stdev, missing))
}
sample <- c(1, 4, 7, NA, 10)
summary_stats(sample)
summary_stats <- function(x) {
minimum <- get_minimum(x, na.rm=TRUE)
percent10 <- get_percentile10(x, na.rm=TRUE)
quartile1 <- get_quartile1(x, na.rm=TRUE)
median <- get_median(x, na.rm=TRUE)
mean <- get_average(x, na.rm=TRUE)
quartile3 <- get_quartile3(x, na.rm=TRUE)
maximum <- get_maximum(x, na.rm=TRUE)
range <- get_range(x, na.rm=TRUE)
stdev <- get_stdev(x, na.rm=TRUE)
missing <- count_missing(x)
return (list(minimum, percent10, quartile1, median, mean,
quartile3, maximum, range, stdev, missing))
}
summary_stats(sample)
summary_stats <- function(x) {
minimum <- get_minimum(x, na.rm=TRUE)
percent10 <- get_percentile10(x, na.rm=TRUE)
quartile1 <- get_quartile1(x, na.rm=TRUE)
median <- get_median(x, na.rm=TRUE)
mean <- get_average(x, na.rm=TRUE)
quartile3 <- get_quartile3(x, na.rm=TRUE)
maximum <- get_maximum(x, na.rm=TRUE)
range <- get_range(x, na.rm=TRUE)
stdev <- get_stdev(x, na.rm=TRUE)
missing <- count_missing(x)
return (vector(minimum, percent10, quartile1, median, mean,
quartile3, maximum, range, stdev, missing))
}
summary_stats(sample)
missing <- count_missing(x)
summary_stats <- function(x) {
minimum <- get_minimum(x, na.rm=TRUE)
percent10 <- get_percentile10(x, na.rm=TRUE)
quartile1 <- get_quartile1(x, na.rm=TRUE)
median <- get_median(x, na.rm=TRUE)
mean <- get_average(x, na.rm=TRUE)
quartile3 <- get_quartile3(x, na.rm=TRUE)
maximum <- get_maximum(x, na.rm=TRUE)
range <- get_range(x, na.rm=TRUE)
stdev <- get_stdev(x, na.rm=TRUE)
missing <- count_missing(x)
return (c(minimum, percent10, quartile1, median, mean,
quartile3, maximum, range, stdev, missing))
}
missing <- count_missing(x)
summary_stats(sample)
library(shiny); runApp('stat133-hws-fall17/hw04/app/shiny.R')
freq <- table(dataset$Grade)
dataset <- read.csv('../data/cleandata/cleanscores.csv',
stringsAsFactors = FALSE)
setwd("/Users/Lewis/stat133-hws-fall17/hw04/app")
dataset <- read.csv('../data/cleandata/cleanscores.csv',
stringsAsFactors = FALSE)
freq <- table(dataset$Grade)
prop <- prop.table(dataset$Grade)
prop <- prop.table(freq)
prop <- prop.table(freq, 2)
dataset$Grade <- factor(dataset$Grade,
levels = c('A+', 'A', 'A-',
'B+', 'B', 'B-',
'C+', 'C', 'C-',
'D', 'F'))
freq <- table(dataset$Grade)
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
summary(freq)
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
select(dataset, Grade)
runApp('shiny.R')
library(dplyr)
select(dataset, Grade)
runApp('shiny.R')
runApp('shiny.R')
table(dataset$Grade)
a <- t(table(dataset$Grade))
a
a[, 2]
a <- as.data.frame(table(dataset$Grade))
a
a[, 2]
b <- as.data.frame(prop.table(table(dataset$Grade)))
b
runApp('shiny.R')
runApp('shiny.R')
b[2]
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
a <- dataset$HW1
remove_missing <- function(x) {
missing_vals <- is.na(x)
trimmed <- x[!missing_vals]
return (trimmed)
}
get_minimum <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
return (sort(x)[1])
}
return (sort(x)[1])
}
get_maximum <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
return (sort(x)[length(x)])
}
return (sort(x)[length(x)])
}
get_range <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
}
max <- get_maximum(x)
min <- get_minimum(x)
return (max - min)
}
get_percentile10 <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
}
return (quantile(x, 0.1))
}
get_percentile90 <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
}
return (quantile(x, 0.9))
}
get_median <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
}
sort(x)
len <- length(x)
if ((len %% 2) == 0) {
return ((x[len/2] + x[len/2 + 1]) / 2)
}
return (x[len/2 + 0.5])
}
get_average <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
}
sum <- 0
for (i in 1:length(x)) {
sum <- sum + x[i]
}
return (sum / length(x))
}
get_stdev <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
}
sum <- 0
mean <- get_average(x)
for (i in 1:length(x)) {
sum <- sum + (mean - x[i])^2
}
return (sqrt(sum / (length(x) - 1)))
}
get_quartile1 <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
}
return (quantile(x, 0.25))
}
get_quartile3 <- function(x, na.rm=FALSE) {
if (na.rm == TRUE) {
x <- remove_missing(x)
}
return (quantile(x, 0.75))
}
count_missing <- function(x) {
count <- 0
for (boolean in is.na(x)) {
if (boolean == TRUE) {
count <- count + 1
}
}
return (count)
}
summary_stats <- function(x) {
mis <- count_missing(x)
if (checknarm(x)) {
x <- remove_missing(x)
}
min <- get_minimum(x)
perc10 <- get_percentile10(x)
q1 <- get_quartile1(x)
med <- get_median(x)
mn <- get_average(x)
q3 <- get_quartile3(x)
perc90 <- get_percentile90(x)
max <- get_maximum(x)
rang <- get_range(x)
std <- get_stdev(x)
output <- list(minimum = min, percent10 = perc10, quartile1 = q1,
median = med, mean = mn, quartile3 = q3,
percent90 = perc90, maximum = max, range = rang,
stdev = std, missing = mis)
return (output)
}
checknarm <- function(x) {
if (is.element(TRUE, is.na(x))) {
return (TRUE)
}
else {
return (FALSE)
}
}
summary_stats <- function(x) {
mis <- count_missing(x)
if (checknarm(x)) {
x <- remove_missing(x)
}
min <- get_minimum(x)
perc10 <- get_percentile10(x)
q1 <- get_quartile1(x)
med <- get_median(x)
mn <- get_average(x)
q3 <- get_quartile3(x)
perc90 <- get_percentile90(x)
max <- get_maximum(x)
rang <- get_range(x)
std <- get_stdev(x)
output <- list(minimum = min, percent10 = perc10, quartile1 = q1,
median = med, mean = mn, quartile3 = q3,
percent90 = perc90, maximum = max, range = rang,
stdev = std, missing = mis)
return (output)
}
checknarm <- function(x) {
if (is.element(TRUE, is.na(x))) {
return (TRUE)
}
else {
return (FALSE)
}
}
print_stats <- function(stats) {
line1 <- paste("minimum  : ", format(round(stats[[1]], 4), nsmall=4), sep="")
line2 <- paste("percent10: ", format(round(stats[[2]], 4), nsmall=4), sep="")
line3 <- paste("quartile1: ", format(round(stats[[3]], 4), nsmall=4), sep="")
line4 <- paste("median   : ", format(round(stats[[4]], 4), nsmall=4), sep="")
line5 <- paste("mean     : ", format(round(stats[[5]], 4), nsmall=4), sep="")
line6 <- paste("quartile3: ", format(round(stats[[6]], 4), nsmall=4), sep="")
line7 <- paste("percent90: ", format(round(stats[[7]], 4), nsmall=4), sep="")
line8 <- paste("maximum  : ", format(round(stats[[8]], 4), nsmall=4), sep="")
line9 <- paste("range    : ", format(round(stats[[9]], 4), nsmall=4), sep="")
line10 <- paste("stdev    : ", format(round(stats[[10]], 4), nsmall=4), sep="")
line11 <- paste("missing  : ", format(round(stats[[11]], 4), nsmall=4), sep="")
cat(paste(line1, line2, line3, line4, line5, line6, line7,
line8, line9, line10, line11, sep="\n"))
}
rescale100 <- function(x, xmin, xmax, na.rm=FALSE) {
if (na.rm==TRUE) {
x <- remove_missing(x)
}
return (100 * ((x - xmin) / (xmax - xmin)))
}
drop_lowest <- function(x) {
x <- remove_missing(x)
x <- x[-which.min(x)]
return (x)
}
score_homework <- function(x, drop=FALSE) {
x <- remove_missing(x)
if (drop == TRUE) {
x <- drop_lowest(x)
}
return (get_average(x))
}
score_quiz <- function(x, drop=FALSE) {
x <- remove_missing(x)
if (drop == TRUE) {
x <- drop_lowest(x)
}
return (get_average(x))
}
score_lab <- function(x) {
if (x > 12 | x < 0) {
return ("Error: Invalid Score")
}
else if (x == 11 | x == 12) {
return (100)
}
else if (x == 10) {
return (80)
}
else if (x == 9) {
return (60)
}
else if (x == 8) {
return (40)
}
else if (x == 7) {
return (20)
}
else if (x == 6 | x < 6 && x > 0) {
return (0)
}
}
letter_grade <- function(x) {
if (x >= 0 && x < 50) {
return ('F')
}
else if (x >= 50 && x < 60) {
return ('D')
}
else if (x >= 60 && x < 70) {
return ('C-')
}
else if (x >= 70 && x < 77.5) {
return ('C')
}
else if (x >= 77.5 && x < 79.5) {
return ('C+')
}
else if (x >= 79.5 && x < 82) {
return ('B-')
}
else if (x >= 82 && x < 86) {
return ('B')
}
else if (x >= 86 && x < 88) {
return ('B+')
}
else if (x >= 88 && x < 90) {
return ('A-')
}
else if (x >= 90 && x < 95) {
return ('A')
}
else if (x >= 95 && x <= 100) {
return ('A+')
}
}
dataset <- read.csv('../data/cleandata/cleanscores.csv',
stringsAsFactors = FALSE)
summary_stats(dataset$HW1)
print_stats(summary_stats(dataset$HW1))
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
runApp('shiny.R')
cor(3, 4)
a <- c(1, 2, 3, 4, 5)
b <- c(3, 4, 5, 6, 7)
cor(a, b)
c <- c(cor(a, b))
c
c[1]
c[[1]]
print(cor(a, b))
print(c[1])
print(c[[1]])
else if (x >= 90 && x < 95) {
return ('A')
}
letter_grade <- function(x) {
if (x >= 0 && x < 50) {
return ('F')
}
else if (x >= 50 && x < 60) {
return ('D')
}
else if (x >= 60 && x < 70) {
return ('C-')
}
else if (x >= 70 && x < 77.5) {
return ('C')
}
else if (x >= 77.5 && x < 79.5) {
return ('C+')
}
else if (x >= 79.5 && x < 82) {
return ('B-')
}
else if (x >= 82 && x < 86) {
return ('B')
}
else if (x >= 86 && x < 88) {
return ('B+')
}
else if (x >= 88 && x < 90) {
return ('A-')
}
else if (x >= 90 && x < 95) {
return ('A')
}
else if (x >= 95 && x <= 100) {
return ('A+')
}
}
runApp('shiny.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
t <- c(1, 4, 7, NA, 10)
a <- summary_stats(t)
a[1]
a[[1]]
test_that("Testing 'summary_stats()'", {
expect_equal(summary_stats(test1)[[1]] + summary_stats[[4]], 6.5)
})
library(testthat)
source('functions.R')
setwd('Users/Lewis/stat133-hws-fall17/hw04/code')
setwd('Users/Lewis/stat133-hws-fall17/hw04/code')
getwd()
